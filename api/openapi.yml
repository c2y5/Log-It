openapi: "3.1.1"
info:
  title: Log-It API
  version: "1.0"
  description: API for developers to log and manage their application logs.
servers:
  - url: https://logit.amsky.xyz
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /auth/register:
    post:
      summary: Register for a dev key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        "201":
          description: Dev key created
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicKey:
                    type: string
                  token:
                    type: string
        "400":
          description: Request did not contain a password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /auth/login:
    post:
      summary: Fetch a JWT token for auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                publicKey:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Request did not contain password or public key
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/pull:
    get:
      summary: Fetch logs
      security:
        - bearerAuth: []
      parameters:
        - name: channel
          in: query
          required: false
          schema:
            type: string
        - name: ip
          in: query
          required: false
          schema:
            type: string
        - name: logLevel
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
        - name: messageContains
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Logs fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicKey:
                    type: string
                  page:
                    type: integer
                  logs:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        channel:
                          type: string
                        ip:
                          type: string
                        logLevel:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                        logId:
                          type: string
        "403":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/log:
    get:
      summary: Log a message
      parameters:
        - name: key
          description: Public dev key
          in: query
          required: true
          schema:
            type: string
        - name: channel
          in: query
          required: true
          schema:
            type: string
        - name: message
          in: query
          required: true
          schema:
            type: string
        - name: logLevel
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Log created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "400":
          description: Bad request, missing fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Missing/invalid dev key
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/edit:
    put:
      summary: Edit a log's message
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                logId:
                  type: string
                message:
                  type: string
      responses:
        "200":
          description: Log edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "400":
          description: Bad request, missing fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Log not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/delete:
    delete:
      summary: Delete a log
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                logId:
                  type: string
      responses:
        "200":
          description: Log deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "400":
          description: Bad request, missing fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Log not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/clear:
    delete:
      summary: Clear all logs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: All logs cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  deletedCount:
                    type: integer
                    example: 50
        "403":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: No logs found to clear
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string